$!
$!  VSMP$LOAD.COM - start VAX MP virtual multiprocessing
$!
$ PROC_FILE = F$ENVIRONMENT("PROCEDURE")
$ PROC_DIR = F$PARSE(PROC_FILE,,,"DEVICE","SYNTAX_ONLY") + -
             F$PARSE(PROC_FILE,,,"DIRECTORY","SYNTAX_ONLY")
$ VSMP :== $'PROC_DIR'VSMP
$ SAY := WRITE SYS$OUTPUT
$ SS_NORMAL = 1
$!
$ VSMP_MSG_SYS_NOT_VAXMP = %XF1B800C
$ DEFINE/USER SYS$OUTPUT _NLA0:
$ DEFINE/USER SYS$ERROR _NLA0:
$ ON WARNING THEN CONTINUE
$ VSMP QUERY
$ EX_STATUS = $STATUS
$ IF (F$TRNLNM("SYS$OUTPUT",,,,,"ACCESS_MODE") .EQS. "USER") THEN DEASSIGN/USER SYS$OUTPUT
$ IF (F$TRNLNM("SYS$ERROR",,,,,"ACCESS_MODE") .EQS. "USER") THEN DEASSIGN/USER SYS$ERROR
$ ON WARNING THEN EXIT SS_NORMAL
$ IF EX_STATUS .EQ. VSMP_MSG_SYS_NOT_VAXMP
$ THEN
$     SAY "VSMP multiprocessing cannot be activated because not running on VAX MP"
$     EXIT SS_NORMAL
$ ENDIF
$!
$ @'PROC_DIR'DEVICES.COM
$!
$ ON WARNING THEN CONTINUE
$ VSMP LOAD 'VSMP$LOAD_OPTIONS' 'P1' 'P2' 'P3' 'P4' 'P5' 'P6' 'P7' 'P8'
$ ON WARNING THEN EXIT SS_NORMAL
$ EXIT SS_NORMAL